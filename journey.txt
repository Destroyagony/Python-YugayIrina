Ссылка видео-чат:
https://meet.jit.si/LongCriesInformAccordingly


05.07.23 (lesson 1)

1. Pull Requests "Senatorov"
2. Fork от "Senatorov" на "YugayIrina"
3. Merg своих коммитов (изменила файл README.MD--> написала I love Python-->save commits)
4. Добавили  организацию: github---> your profile---> edit profile--->Добавили организацию 
"Senatorov"-->save
5. Скачали VS code--> установили программы
6. В vs code создали виртуальное окружение:
   * этот компьютер-->документы-->Github-->Python-YugayIrina 
   (и в поисковой строке вводу cmd и жму enter)-->появится консоль--> в консоле ввожу команды: 
python -m venv venv  (enter) # второе слово venv-это название виртуального окружения
venv\Scripts(после \ нажимаю tab на клавиатуре и появится 
слово Scripts)\activate(после \ нажимаю tab на клавиатуре и появится слово слово activate)(enter)

7. в VScode создали git ignore: 
   * этот компьютер-->документы-->Github-->Python-YugayIrina---> создать текстовый файл 
   с названием .gitignore--> зайти в него--> попадаю в VS code (Как-то потом в кошечке 
   всё схлопнулось-попало в gitignore :) )

8. Где я увижу домашнии задания?
  * кошечка (github)-->history-->нажимаю вкладку "Fetch origin"


07.07.23 (Lesson 2)

1. В VS code создали новый файл "Lesson2.ipynb" и записали в него определения понятий: 
Linter, Flake8, Black, Hot Key, а так же вспомнили Fork и Pull Requests
2. В VS code создали файл config.cfg и установили максимальную длину строки в 120 знаков через команду : 
        1. [flake8]
        2. max-line-length = 120
3. Вспомнили с помощью какой команды устанавливается вирутальное окружение.
4. Зашла в кошечку-->history-->нажимаю вкладку "Fetch origin"  и увидела новый файл "hw" 
с сайтами для прокачки алгоритмов: leetcode, codeforces, projecteuler
5. Зашли на сайт codeforces.com--->зарегистрировалась--->вошла.
6. Сайт codeforces.com--> раздел меню "Архив"--> нажимаю знак "молния" и отсортировала 
сложность задач по возрастанию.
7. Сайт codeforces.com--> решаем задачу #4A "Арбуз"-->вспомнила какой знак в Python делит 
число без остатка (%)
8. Ознакомились с понятиями "time complexity" и "space complexity"- The time and space complexities 
are not related to each other. They are used to describe how much space/time your algorithm takes 
based on the input (Не зависящие друг от друга понятия! Показывают какое время и пространство займет 
наш алгоритм)
9. VS code--> создали файл codeforces.py--> написали код для решения задачи! 
w = int(input())
if w % 2 == 0 and w > 2:            !!!!! Очень важно было добавить условие "and w > 2:", т.к. нам надо поделить арбуз на двоих,      
    print("YES")                          а цифра 2 не может поделиться поровну на двоих (согласно условияю), поэтому  
else:                                     устанавливаем ограничение > цифры 2 !!! То есть 4 уже может поровку поделиться на 
    print("NO")                           двоих!!!!
10. Заполнила журнал и закомитила изменения на github.
11. Уроки буду чередоваться: Дискретная математика \ Алгоритмы \ Python

10.07.23 (Lesson-GITHUB)

     ***** Если в телеграм пришла ссылка репы от коллеги о помощи:
- увидела в телеге ссылку репы коллеги
- захожу в ссылку
- проверяю коммент
- пишу свою подсказку (свое примечание)
- и тут же в гите делаю коммит и отправляю
- скопировать репу (сверху копирую вс. адресную строку репозитория)
- отписываюсь в телеге, что ответила (1строка: HELPERю  2-строка @эл.адресб  3-строка ссылка репы)
- в кошку вставляем ссылку и клонируем скопированную репу от коллеги
      
      ДРУГОЙ СПОСОБ, который не работает:
- пришла ссылка репы от коллеги в телеге
- захожу в ссылку
- проверяю коммент
-скопировать репу (сверху копирую вс. адресную строку репозитория)
- иду в кошку
- карент репозиторий
- адд
- клон репозиторий
- URL (вставляю ссылку)
-слон
- отправляем коммит 
- отписываемся в телеге

11.07.23 (Lesson 3)

1. В vs: Написали определение спортивного\олимпиадного программиста
2. В vs: Узнала, что переменные можно писать на любом языке мира, в т.ч. на русском. Но 
стандартом, по неглассной договоренности, считается латинский язык
3. В vs: Синтаксис по PEP8 (проверка благодаря Linter)
4. В vs: Функция HELP показывает описание любой функции. Как вызвать? Удерживаю CTRL и жму на нужную функцию (print, def и т.д.)
или можно написать help(print)/help(str) и т.д.
5.В vs: При вызове описания функции с помощь кнопки ctrl, появлется строка builtint.pyi-можно на нее нажать, что бы 
появилась вкладка с описанием всех функций Python
6. В vs: *args (*values)- это возможность принимать неограниченное количество аргументов
7.В vs: в папке config изменили длинну строки с 120 до 130
8. Заполнить journey+коммит
9. Домашка: доделать проект+ прочитать книгу "Типизированный Python" (Алексей Голобурдин)-ссылка в телеге

14.07.23 (Lesson 4)
1. Математические операторы, их определения и принцип работы (+,-,*, /, //, %, **)
2. в paint разбирали деление 3 на 4: определяли, где получается значения для %, а где 
для //! (файл из paint сохранила) 
3.Для понимания работы функции и др.операций, 
надо заходить на pythontutor.ru-->Python--> вставить свой код-->нажимать на 
стрелочки вперед-назад и буду видеть как работает программа!!
4. Дочитать книгу "Типизированный Python" (Алексей Голобурдин)
5. Журнал Заполнить
6. коммит+пуш

18.07.23 (Lesson 5)

1. Изучали разницу понятий между операторами 'is' и '=='! 
IS - проверяет объект на идентичность
== - проверяет эквивалент объектов
2. На практике проверяли работу is и ==
3. Находили id ячейки. Синтаксис: id(название переменной)
4. Переменные находились в одной и той же ячейке (id общий), только 
в том случае, если значения в переменной были в диапозоне от -5 до 256!
То есть id(num) !== id(num2)
5. Если значения в переменной увеличивались, например -6 или 257, то создавалась
новая ячейка, то есть id уже был разный у двух переменных! То есть id(num) !== id(num2)
5. Определяли тип данных через type. Синтаксис: type(название переменной). 
Например type(num) == int, type(list1) == str
6. Узнала как удалять переменную. Синтаксис: del+пробел+переменная. 
После операции del удаляется не только переменная, но все ее значения-
это происходит автоматически!!!!
7.Вспомнили функция helt. Синтаксис: печатаю help(тип данных) и 
далее жму CTRL+жму на help и выходит новая вкладка "buitins"
8. Заполнить journey+коммит+пуш


!!!!!!!!!!!!!!
MY HINTS:
1). Что бы проверить в ide какие пакеты установлены, надо в консоле ввести: pip freeze
2). https://t.me/c/1733865840/429  (синхронизация telegram c мобилы на комп): 
скачать на комп + с мобилы сосканить QR-код
3). Как отправить коммит из кошечки: захожу в кошечку-->fetch origin (т.е. обновляю и появляется 
в changes цифра=изменения)--->changes-->внизу слева, в строке update ввожу название коммита 
и нажимаю commit to main-->появится синяя кнопка push origin-->нажимаю push origin и 
иду на github проверять!
4). Горячие команды:
CTRL+S --> сохранение
CTRL+Z --> вернуть предыдущие данные
SHIFT+ALT+F --> в VS выравнивает синтаксис, согласно PEP8
ALT+TAB --> переключение окно
CTRL+A+CTRL+V --> в VS выделяет код и вставляет скопированный
5). Что бы в VS создать новый файл урока "Lesson4": file-->new file-->щелкаю мышью на jupyter--> CTRL+S  и появится окно для создания и сохранения текстового файла-вот сдесь и создаю новый файл Lesson
6). Что бы поделиться экраном, в VS слева на понеле меню нажимаю знак "стрелочка над круглишком",далее ждем загрузку команды! После, нажимаю CTRL+S и вставляю в чате нашей встрече- ссылку!
 7). После зачета командного проекта, надо писать запрос на код-ревью @san1rope с ссылкой на проект с репозитория ОРГАНИЗАЦИИ


 !!!!!!!!!!!!!!!!
 GIT HUB:
 2). Когда Руслан отписывается, что принял pull requests-я должна в гите нажать: 
 захожу в нужный репозиторий-->Sync fork-->Update